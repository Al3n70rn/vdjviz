# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                                                 controllers.Application.index()
GET         /contacts                                         controllers.Application.contacts()
GET         /about                                            controllers.Application.about()
GET         /badbrowser                                       controllers.Application.badBrowser()


# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                     controllers.Assets.at(path="/public", file)

# Account API
GET         /account                                          controllers.AccountAPI.account()
GET         /account/js.shared                                controllers.Application.js(shared: Boolean = true)
GET         /account/js                                       controllers.Application.js(shared: Boolean = false)
GET         /account/api/rendering/ws                         controllers.AccountAPI.render()
GET         /account/api/testws                               controllers.AccountAPI.wsTest()
POST        /account/api/upload                               controllers.AccountAPI.upload()
POST        /account/api/delete                               controllers.AccountAPI.delete()
POST        /account/api/data                                 controllers.AccountAPI.data()
POST        /account/api/log                                  controllers.AccountAPI.log()
GET         /account/api/files                                controllers.AccountAPI.files()
GET         /account/api/info                                 controllers.AccountAPI.accountInformation()
POST        /account/api/annotation                           controllers.AccountAPI.annotationData()
POST        /account/api/annotation/search                    controllers.AccountAPI.searchClonotypes()
POST        /account/api/annotation/multipleSearch            controllers.AccountAPI.multipleSearchClonotypes()
GET         /account/api/samplecollection/ws                  controllers.SampleCollectionAPI.SampleCollectionAPI.open()
POST        /account/api/share                                controllers.AccountAPI.shareFiles()
POST        /account/api/deleteShared                         controllers.AccountAPI.deleteShared()
POST        /account/api/createtag                            controllers.AccountAPI.createTag()
POST        /account/api/deletetag                            controllers.AccountAPI.deleteTag()
POST        /account/api/tagfiles                             controllers.AccountAPI.tagFiles()

# Share api
GET         /share/:link                                      controllers.ShareAPI.sharedAccount(link)
POST        /share/api/log/:link                              controllers.ShareAPI.log(link)
GET         /share/api/info/:link                             controllers.ShareAPI.info(link)
POST        /share/api/data/:link                             controllers.ShareAPI.data(link)
POST        /share/api/annotation/:link                       controllers.ShareAPI.annotationData(link)
POST        /share/api/annotation/search/:link                controllers.ShareAPI.searchClonotypes(link)
POST        /share/api/annotation/multipleSearch/:link        controllers.ShareAPI.multipleSearchClonotypes(link)
GET         /share/api/samplecollection/ws/:link              controllers.SampleCollectionAPI.SampleCollectionAPI.openShared(link)

# Robots.txt route

GET         /robots.txt                                       controllers.Assets.at(path="/public", file="robots.txt")

# Auth routes
GET         /signin                                           securesocial.controllers.LoginPage.login
GET         /logout                                           securesocial.controllers.LoginPage.logout
GET         /authenticate/:provider                           securesocial.controllers.ProviderController.authenticate(provider)
POST        /authenticate/:provider                           securesocial.controllers.ProviderController.authenticateByPost(provider)
GET         /signup                                           securesocial.controllers.Registration.startSignUp
POST        /signup                                           securesocial.controllers.Registration.handleStartSignUp
GET         /signup/:token                                    securesocial.controllers.Registration.signUp(token)
POST        /signup/:token                                    securesocial.controllers.Registration.handleSignUp(token)
GET         /password                                         securesocial.controllers.PasswordChange.page
POST        /password                                         securesocial.controllers.PasswordChange.handlePasswordChange
GET         /reset                                            securesocial.controllers.Registration.startResetPassword
POST        /reset                                            securesocial.controllers.Registration.handleStartResetPassword
GET         /reset/:token                                     securesocial.controllers.Registration.resetPassword(token)
POST        /reset/:token                                     securesocial.controllers.Registration.handleResetPassword(token)


GET         /*path                                            controllers.Application.notFound404(path: String)
